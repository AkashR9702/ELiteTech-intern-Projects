# -*- coding: utf-8 -*-
"""Sales Prediction using python.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mkajOkEkcyAfycscLZnqULGPJB8o_ec5

â–¶**TASK-4 : SALES PREDICTION USING PYTHON**


> Domain: Data Science

*IMPORTING IMPORTANT LIBRARIES*
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""*IMPORTING DATASET*"""

df = pd.read_csv("/content/advertising.csv")
df.head()

"""*Aim:- Sales prediction involves forecasting the amount of a product that
customers will purchase, taking into account various factors such as
advertising expenditure, target audience segmentation, and
advertising platform selection.*

> Given dataset consist of the advertising platform and the related sales.Let's visulalize each platform
"""

df.shape

df.describe()

"""
**Basic Observation**

---
> Avg expense spend is highest on TV


> Avg expense spend is lowest on Radio


> Max sale is 27 and min is 1.6





"""

sns.pairplot(df, x_vars=['TV', 'Radio','Newspaper'], y_vars='Sales', kind='scatter')
plt.show()

"""Pair Plot Observation


---
When advertising cost increases in TV Ads the sales will increase as well. While the for newspaper and radio it is bit unpredictable.

"""

df['TV'].plot.hist(bins=10)

df['Radio'].plot.hist(bins=10, color="green", xlabel="Radio")

df['Newspaper'].plot.hist(bins=10,color="purple", xlabel="newspaper")

"""Histogram Observation


---

*The majority sales is the result of low advertising cost in newspaper*
"""

sns.heatmap(df.corr(),annot = True)
plt.show()

"""**SALES IS HIGHLY COORELATED WITH THE TV**

Lets train our model using linear regression as it is coorelated with only one variable TV
"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(df[['TV']], df[['Sales']], test_size = 0.3,random_state=0)

print(X_train)

print(y_train)

print(X_test)

print(y_test)

from sklearn.linear_model import LinearRegression
model = LinearRegression()
model.fit(X_train,y_train)

res= model.predict(X_test)
print(res)

model.coef_

model.intercept_

0.05473199* 69.2 + 7.14382225

plt.plot(res)

plt.scatter(X_test, y_test)
plt.plot(X_test, 7.14382225 + 0.05473199 * X_test, 'r')
plt.show()

"""***Concluding with saying that above mention solution is successfully able to predict the sales using advertising platform datasets***"""